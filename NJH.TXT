FullStack Take Home Challenge
Submission Instructions:
• This assignment must be submitted within 3 days of receiving it.
• You will also be required to present and explain your approach and solutions, so please be
prepared for a brief walkthrough during the next interview stage.
Welcome to the take-home challenge for the FullStack Web Developer position. We are excited to see
your skills and experience in action.
The challenge is to build a news aggregator website that pulls articles from various sources and
displays them in a clean, easy-to-read format.
Requirements:
1. User authentication and registration: Users should be able to create an account and log in to
the website to save their preferences and settings.
2. Article search and filtering: Users should be able to search for articles by keyword and filter
the results by date, category and source
3. Personalized news feed: Users should be able to customize their news feed by selecting their
preferred sources, categories and authors.
4. Mobile-responsive design: The website should be optimized for viewing on mobile devices.
Data Sources That Can Be Used (Choose At Least 3)
1. NewsAPI: This is a comprehensive API that allows developers to access articles from more
than 70,000 news sources, including major newspapers, magazines, and blogs. The API
provides access to articles in various languages and categories, and it supports search and
filtering.
2. NewsCred: The NewsCred API provides access to a wide range of news content from various
sources, including newspapers, magazines, and blogs. The API allows developers to retrieve
articles based on keywords, categories, and sources, as well as to search for articles by
author, publication, and topic.
3. The Guardian: This API allows developers to access articles from The Guardian newspaper,
one of the most respected news sources in the world. The API provides access to articles in
various categories and supports search and filtering.
4. New York Times: This API allows developers to access articles from The New York Times, one
of the most respected news sources in the world. The API provides access to articles in various
categories and supports search and filtering.

5. BBC News: This API allows developers to access news from BBC News, one of the most
trusted news sources in the world. It provides access to articles in various categories and
supports search and filtering.
6. NewsAPI.org: This API provides access to news articles from thousands of sources, including
news publications, blogs, and magazines. It allows developers to retrieve articles based on
keywords, categories, and sources.

Challenge Guidelines and EXPECTED RESULT
1. The outputs expected from this challenge are two projects (Backend and Frontend) using
Python (FASTAPI) for the backend and React.js with TypeScript for the frontend.
2. Make sure to Dockerize both applications and create a docker-compose environment with
clear documentation on how to run the project.
3. Any design from Dribble can be applicable as long as it fulfills all needed criteria.
4. Best practices of software development such as DRY (Don't Repeat Yourself), KISS (Keep It
Simple, Stupid), and SOLID (Single Responsibility, Open-Closed, Liskov Substitution, Interface
Segregation, Dependency Inversion) should be incorporated.
5. All selected data sources should be scrapped (e.g., via scheduled commands) and saved
locally in the database. Data filtering must be performed on local data, not live sources.