services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: news_aggregator_db
    environment:
      POSTGRES_DB: news_aggregator
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - news_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: news_aggregator_backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/news_aggregator
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - NEWS_API_KEY=${NEWS_API_KEY}
      - GUARDIAN_API_KEY=${GUARDIAN_API_KEY}
      - NYT_API_KEY=${NYT_API_KEY}
      - BACKEND_URL=http://localhost:8000
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - news_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: news_aggregator_frontend
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_APP_NAME=News Aggregator
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - news_network
    command: npm run dev

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: news_aggregator_redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - news_network

volumes:
  postgres_data:
    name: gurugeeks_postgres_data
  redis_data:
    name: gurugeeks_redis_data

networks:
  news_network:
    driver: bridge
